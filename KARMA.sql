if (select DATABASEPROPERTY(DB_NAME(), N'IsFullTextEnabled')) <> 1 
exec sp_fulltext_database N'enable' 

GO

if not exists (select * from dbo.sysfulltextcatalogs where name = N'20040729')
exec sp_fulltext_catalog N'20040729', N'create' 

GO

CREATE TABLE [dbo].[MEMBER] (
	[UID] [int] IDENTITY (1, 1) NOT NULL ,
	[USERID] [varchar] (16) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[PASSWORD] [varchar] (16) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[COMPANY] [varchar] (50) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[RESIDENCE_NO] [varchar] (14) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[CEO_NAME] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[TELEPHONE] [varchar] (15) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[FAX] [varchar] (15) COLLATE Korean_Wansung_CI_AS NULL ,
	[ZIPCODE] [char] (7) COLLATE Korean_Wansung_CI_AS NULL ,
	[ADDRESS1] [varchar] (50) COLLATE Korean_Wansung_CI_AS NULL ,
	[ADDRESS2] [varchar] (50) COLLATE Korean_Wansung_CI_AS NULL ,
	[POSITION] [varchar] (20) COLLATE Korean_Wansung_CI_AS NULL ,
	[U_NAME] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[U_TELEPHONE] [varchar] (15) COLLATE Korean_Wansung_CI_AS NULL ,
	[U_CELLUAR] [varchar] (15) COLLATE Korean_Wansung_CI_AS NULL ,
	[U_EMAIL] [varchar] (50) COLLATE Korean_Wansung_CI_AS NULL ,
	[REFERENCE] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[RECEIPT] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[BIZ_CONDITION] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[BIZ_ITEM] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[JOINING_DAY] [datetime] NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[MEMBER_DIVISION] (
	[UID] [int] NOT NULL ,
	[USERID] [varchar] (16) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[PASSWORD] [varchar] (16) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[GROUPID] [tinyint] NOT NULL ,
	[PARTID] [tinyint] NOT NULL ,
	[PERMISSION] [tinyint] NOT NULL ,
	[RATETYPE] [tinyint] NOT NULL ,
	[CODE] [int] NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[MSG] (
	[GID] [int] NOT NULL ,
	[MESSAGE1] [varchar] (82) COLLATE Korean_Wansung_CI_AS NULL ,
	[MESSAGE2] [varchar] (1002) COLLATE Korean_Wansung_CI_AS NULL ,
	[MSG_SDATE] [char] (12) COLLATE Korean_Wansung_CI_AS NULL ,
	[MSG_EDATE] [char] (12) COLLATE Korean_Wansung_CI_AS NULL ,
	[ATTACH_FILE] [varchar] (30) COLLATE Korean_Wansung_CI_AS NULL ,
	[REPLY_TYPE] [tinyint] NULL ,
	[REPLY_COUNT] [tinyint] NULL ,
	[CS_NUMBER] [varchar] (12) COLLATE Korean_Wansung_CI_AS NULL ,
	[MSG_TYPE] [int] NULL ,
	[SUBJECT] [varchar] (50) COLLATE Korean_Wansung_CI_AS NULL ,
	[REPLY_TEL] [varchar] (12) COLLATE Korean_Wansung_CI_AS NULL ,
	[JOB_STATUS] [tinyint] NOT NULL ,
	[RET_RETURN] [tinyint] NULL ,
	[RET_SUBMIT] [tinyint] NULL ,
	[RET_CALLBACK] [tinyint] NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[MSG_CANCEL] (
	[GID] [int] NOT NULL ,
	[UID] [int] NOT NULL ,
	[INSERTDATE] [datetime] NOT NULL ,
	[SENDDATE] [datetime] NOT NULL ,
	[CANCELDATE] [datetime] NOT NULL ,
	[SUBJECT] [varchar] (50) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[TOTAL] [int] NOT NULL ,
	[MSG_TYPE] [int] NOT NULL ,
	[ADMIN] [varchar] (20) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[MASTER] [tinyint] NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[MSG_GROUP] (
	[GID] [int] IDENTITY (1, 1) NOT NULL ,
	[UID] [int] NOT NULL ,
	[MSG_TYPE] [int] NOT NULL ,
	[SUBJECT] [varchar] (50) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[ENTRY_S] [int] NULL ,
	[ENTRY_F] [int] NULL ,
	[SUCCESS] [int] NULL ,
	[FAIL] [int] NULL ,
	[PAY] [int] NULL ,
	[TOTAL] [int] NULL ,
	[STATUS] [int] NULL ,
	[INSERTDATE] [datetime] NULL ,
	[SENDDATE] [datetime] NULL ,
	[REPLY_TEL] [varchar] (12) COLLATE Korean_Wansung_CI_AS NULL ,
	[REPLY_RESULT] [int] NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[MSG_RESULT] (
	[MID] [int] IDENTITY (1, 1) NOT NULL ,
	[GID] [int] NOT NULL ,
	[JOBID] [int] NULL ,
	[RET_REPORT] [tinyint] NULL ,
	[FEE] [smallint] NULL ,
	[DURATION] [smallint] NULL ,
	[PAGE] [tinyint] NULL ,
	[DEST_NAME] [varchar] (30) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[DEST_ADDR] [varchar] (12) COLLATE Korean_Wansung_CI_AS NOT NULL ,
	[STARTTIME] [char] (15) COLLATE Korean_Wansung_CI_AS NULL ,
	[ENDTIME] [char] (15) COLLATE Korean_Wansung_CI_AS NULL ,
	[REPLIED_DTMP] [varchar] (10) COLLATE Korean_Wansung_CI_AS NULL ,
	[REPLIED_FILE] [varchar] (60) COLLATE Korean_Wansung_CI_AS NULL ,
	[MERGE] [varchar] (120) COLLATE Korean_Wansung_CI_AS NULL ,
	[TEMP_FIELD] [varchar] (50) COLLATE Korean_Wansung_CI_AS NULL 
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[MEMBER] WITH NOCHECK ADD 
	CONSTRAINT [PK_MEMBER_UID] PRIMARY KEY  CLUSTERED 
	(
		[UID]
	)  ON [PRIMARY] 
GO

ALTER TABLE [dbo].[MEMBER_DIVISION] WITH NOCHECK ADD 
	CONSTRAINT [PK_MEMBER_DIVISION] PRIMARY KEY  CLUSTERED 
	(
		[UID]
	)  ON [PRIMARY] 
GO

ALTER TABLE [dbo].[MSG_GROUP] WITH NOCHECK ADD 
	CONSTRAINT [PK_MSG_GROUP] PRIMARY KEY  CLUSTERED 
	(
		[GID]
	)  ON [PRIMARY] 
GO

ALTER TABLE [dbo].[MSG_RESULT] WITH NOCHECK ADD 
	 PRIMARY KEY  CLUSTERED 
	(
		[MID]
	)  ON [PRIMARY] 
GO

 CREATE  CLUSTERED  INDEX [IDX_MSG_JOB_STATUS] ON [dbo].[MSG]([JOB_STATUS], [GID], [MSG_TYPE]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[MEMBER] ADD 
	CONSTRAINT [DF__MEMBER__COMPANY__76CBA758] DEFAULT ('회사명') FOR [COMPANY],
	CONSTRAINT [DF__MEMBER__JOINING___77BFCB91] DEFAULT (getdate()) FOR [JOINING_DAY]
GO

 CREATE  INDEX [NONIDX_MEMBER] ON [dbo].[MEMBER]([USERID]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[MEMBER_DIVISION] ADD 
	CONSTRAINT [DF__MEMBER_DI__GROUP__7A9C383C] DEFAULT (7) FOR [GROUPID],
	CONSTRAINT [DF__MEMBER_DI__PARTI__7B905C75] DEFAULT (1) FOR [PARTID],
	CONSTRAINT [DF__MEMBER_DI__PERMI__7C8480AE] DEFAULT (0) FOR [PERMISSION],
	CONSTRAINT [DF__MEMBER_DI__RATET__7D78A4E7] DEFAULT (0) FOR [RATETYPE],
	CONSTRAINT [DF__MEMBER_DIV__CODE__7E6CC920] DEFAULT (0) FOR [CODE]
GO

 CREATE  INDEX [NONIDX_MEMBER_DIVISION] ON [dbo].[MEMBER_DIVISION]([GROUPID], [PARTID]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[MSG] ADD 
	CONSTRAINT [DF__MSG__MESSAGE1__0F975522] DEFAULT ('문자 메시지 입니다') FOR [MESSAGE1],
	CONSTRAINT [DF__MSG__MESSAGE2__108B795B] DEFAULT ('음성 메시지 입니다') FOR [MESSAGE2],
	CONSTRAINT [DF__MSG__MSG_EDATE__117F9D94] DEFAULT ('0') FOR [MSG_EDATE],
	CONSTRAINT [DF__MSG__REPLY_TYPE__1273C1CD] DEFAULT (0) FOR [REPLY_TYPE],
	CONSTRAINT [DF__MSG__JOB_STATUS__1367E606] DEFAULT (11) FOR [JOB_STATUS]
GO

ALTER TABLE [dbo].[MSG_CANCEL] ADD 
	CONSTRAINT [DF__MSG_CANCE__CANCE__1B0907CE] DEFAULT (getdate()) FOR [CANCELDATE]
GO

ALTER TABLE [dbo].[MSG_GROUP] ADD 
	CONSTRAINT [DF__MSG_GROUP__ENTRY__03317E3D] DEFAULT (0) FOR [ENTRY_S],
	CONSTRAINT [DF__MSG_GROUP__ENTRY__0425A276] DEFAULT (0) FOR [ENTRY_F],
	CONSTRAINT [DF__MSG_GROUP__SUCCE__0519C6AF] DEFAULT (0) FOR [SUCCESS],
	CONSTRAINT [DF__MSG_GROUP__FAIL__060DEAE8] DEFAULT (0) FOR [FAIL],
	CONSTRAINT [DF__MSG_GROUP__PAY__07020F21] DEFAULT (0) FOR [PAY],
	CONSTRAINT [DF__MSG_GROUP__TOTAL__07F6335A] DEFAULT (0) FOR [TOTAL],
	CONSTRAINT [DF__MSG_GROUP__STATU__08EA5793] DEFAULT ((-1)) FOR [STATUS],
	CONSTRAINT [DF__MSG_GROUP__INSER__09DE7BCC] DEFAULT (getdate()) FOR [INSERTDATE],
	CONSTRAINT [DF__MSG_GROUP__SENDD__0AD2A005] DEFAULT (getdate()) FOR [SENDDATE],
	CONSTRAINT [DF__MSG_GROUP__REPLY__0BC6C43E] DEFAULT (0) FOR [REPLY_RESULT]
GO

 CREATE  INDEX [NONIDX_MSG_GROUP] ON [dbo].[MSG_GROUP]([SENDDATE]) ON [PRIMARY]
GO

 CREATE  INDEX [NONIDX_MSG_GROUP2] ON [dbo].[MSG_GROUP]([INSERTDATE]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[MSG_RESULT] ADD 
	CONSTRAINT [DF__MSG_RESUL__DEST___173876EA] DEFAULT ('무명인') FOR [DEST_NAME]
GO

 CREATE  INDEX [NONIDX_MSG_RESULT] ON [dbo].[MSG_RESULT]([GID], [JOBID], [DEST_ADDR]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[MEMBER_DIVISION] ADD 
	CONSTRAINT [FK_MEMBER_DIVISION] FOREIGN KEY 
	(
		[UID]
	) REFERENCES [dbo].[MEMBER] (
		[UID]
	)
GO

ALTER TABLE [dbo].[MSG_GROUP] ADD 
	CONSTRAINT [FK_MSG_GROUP_UID] FOREIGN KEY 
	(
		[UID]
	) REFERENCES [dbo].[MEMBER_DIVISION] (
		[UID]
	)
GO

ALTER TABLE [dbo].[MSG_RESULT] ADD 
	CONSTRAINT [FK_MSG_RESULT] FOREIGN KEY 
	(
		[GID]
	) REFERENCES [dbo].[MSG_GROUP] (
		[GID]
	)
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE VIEW dbo.VIEW_MSG
AS
SELECT   *
FROM      dbo.MSG
WHERE   (JOB_STATUS = 11) OR
                (JOB_STATUS = 21) OR
                (JOB_STATUS = 22) OR
                (JOB_STATUS = 23) OR
                (JOB_STATUS = 24)

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE TRIGGER TRG_MEMBER
ON MEMBER AFTER INSERT
AS
DECLARE @UID INT, @USERID VARCHAR(16), @PASSWORD VARCHAR(16)
SET @UID = (sELECT UID FROM INSERTED)
SET @USERID = (sELECT USERID FROM INSERTED)
SET @PASSWORD = (sELECT PASSWORD FROM INSERTED)
BEGIN

INSERT INTO MEMBER_DIVISION VALUES (@UID,@USERID,@PASSWORD,DEFAULT,DEFAULT,DEFAULT,DEFAULT,NULL)
END

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

Create trigger TRG_MSG_CANCEL_UPDATE
on MSG_CANCEL after UPDATE
as
if update (master)
declare @gid int,@master tinyint
set @gid = (Select gid from inserted)
set @master = (Select master from inserted)

begin

update MSG set JOB_STATUS = @master where gid = @gid

end

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE trigger TRG_MSG_CANCEL_INSERT
on MSG_CANCEL FOR INSERT
as
declare @gid int,@admin varchar(20),@master tinyint,@content varchar(4000)
set @gid = (Select GID from inserted)
set @admin = (Select REPLY_TEL from MSG where GID = @gid)
set @master = (Select JOB_STATUS from MSG where gid = @gid)
set @content = @admin +'번호 사용자 요청으로 GID  를 삭제 완료!!'
begin

update MSG_CANCEL set ADMIN = @admin,MASTER = @master where GID = @gid
update MSG set JOB_STATUS  = 29 where GID = @gid
exec sp_SendMail 'kimdg82@nate.com','kimdg82@nate.com',@gid,@content 

end





GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE TRIGGER TRG_MSG_GROUP_DEL
ON MSG_GROUP AFTER DELETE
AS
DECLARE @GID INT , @UID INT 
,@INSERTDATE DATETIME, @SENDDATE DATETIME, @CANCELDATE DATETIME
,@SUBJECT VARCHAR(50), @TOTAL INT, @MSG_TYPE INT
,@ADMIN VARCHAR(20),@MASTER TINYINT

SET @GID = (sELECT GID FROM DELETED)
SET @UID = (sELECT UID FROM DELETED)
SET @INSERTDATE = (sELECT INSERTDATE FROM DELETED)
SET @SENDDATE = (sELECT SENDDATE FROM DELETED)
SET @CANCELDATE = GETDATE()
SET @SUBJECT = (sELECT SUBJECT FROM DELETED)
SET @TOTAL = (sELECT TOTAL FROM DELETED)
SET @MSG_TYPE = (sELECT MSG_TYPE FROM DELETED)
SET @ADMIN = '김동균'
SET @MASTER = 1

BEGIN 

INSERT INTO MSG_CANCEL VALUES 
(@GID,@UID,@INSERTDATE,@SENDDATE,@CANCELDATE,@SUBJECT,@TOTAL,@MSG_TYPE,@ADMIN,@MASTER)
END

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

