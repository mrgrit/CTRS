0809--------------------------------------------------------------------------------------------
1)주석문 추가 - 함수설명, CASE설명, 불필요 함수 주석처리
2)attach file길이가 14자리 이상이면 report_callback에서 에러 처리(ret_code : 47)
3)jobstatus가 13으로 업데이트 안되는 버그 수정
4)팩스 함수 재구현
5)문자플러스 음성첨부 구현
0810----------------------------------------------------------------------------------------
1)파일 버퍼 크기를 100,150에서 200으로 늘림
2)팩스 테스트(60건,480건)..레포트를 제대로 받지 못함(크로샷닷컴에서는 결과치 정확하게 나옴)
3)문자플러스 음성첨부 완성
0811----------------------------------------------------------------------------------------
1)(bug)help_bind()에서 디비 감시 루틴에 SQLPrepare(hstmt,select,SQL_NTS); 가 두번 실행되고 있음.
->한번으로 수정
2)(bug)파일을 읽을때 빈 라인이 있을경우 exit 되는 버그 수정(예외처리)
구문 : if(!strncmp(fbuf,"\n",1)) { continue; }
3)WSAEventSelect모델로 데몬 분리 계획
0812----------------------------------------------------------------------------------------
1)불필요한 submit용 queue와 thread제거(파일전송으로 하면 파일한개에 한번씩만 오기때문에 무한루프를
돌며 큐를 검사하는것은 낭비가 될 수 있다.)-만약을 대비해 파일명을 xroshot_file3.cpp로 변경
2)수신자 리스트 파일에 &가 누락되는 것을 방지해 예외처리, free()를 할때 문제가 있는것 같다.
배열에 담긴 문자열을 바로 넣어 free를 하니 메모리 에러가 나고 strcpy로 배열의 문자열을 복사하니
정상적으로 free가 되었다.
3)xroshot_file2.cpp -> submit callback의 queue와 thread를 제거 하고난뒤, 동기화에 문제가 있어 
무한 블러킹에 빠지거나 프로그램이 강제 종료되는 현상이 있어 다시 xroshot_file2.cpp로 롤빽!
0813----------------------------------------------------------------------------------------
1)전송결과보기 테스트 -> 잘 안됨(결과치는 단 하나, 상세 항목에는 모두 null값이 찍힘, ret_code
는 45번(0x2D)으로 나옴.
2)레포트를 받는데 큐에만 들어가고 디비에 들어가지 않는 버그발견, getThread2의 세마포어 연산이
이해가 잘 안됨. EnterCriticalSection(&cs_2)를 두번써서 대기상태로 만드는 이유와 세마포어 연산
으로 데이터가 없을때 q_flag_2를 1로 만든다음 put에서 두번 값을 넣게 한 이유를 모르겠음.
LeaveCriticalSection을 중간에 쓰는 이유도 모름.
3)(bug)Tempfield를 입력하지 않은경우 tell에 "\n"이 붙어있어 레포트를 받고 업데이트 조건에서
비교실패가됨, 수정완료.
4)put함수를 실행할때 큐에 몇개의 자료가 있는지, getThread()로 get했을때 큐에 몇개가 남았는지
출력하는 구문 추가
0814----------------------------------------------------------------------------------------
1)가혹 테스트 - 164번 서버에서 프로그램이 메모리 점유율 때문에 강제 종료됨. 165번에서 테스트
하려고 했지만 데이터베이스가 아직 안만들어짐.
0816----------------------------------------------------------------------------------------
1)report callback이 집중적으로 올 경우 점유메모리가 4kbyte씩 증가함. 출력문 제거와 Sleep(5)
구문추가로 메모리 점유율을 떨어뜨릴 수 있음을 기대...
2)submit callback thread, queue제거 완료. 테스트 더 해 봐야함.(xroshot_file3.cpp)
3)레포트를 받다가 데몬이 종료되었을때 재 실행 하면 레포트를 받는다 하더라도 디비에 업데이트 
되지 않는다. getThread가 블러킹에 걸린것 같다. 이는 프로그램이 오랫동안 데드락에 걸리는 상황
을 초래 할 가능성이 있어 위험하다.
0817----------------------------------------------------------------------------------------
1)파일처리시 리스트에 몇명이 있었는지 표시
2)파일처리 루틴을 모듈화, submit에 파일 리스트를 던져줄때 파일이 열려 있어 submit함수 호출
에러가 발생하여 콜이 나가지 않음. 
3)리스트를 넘겨줄때 포인터 변수로 넘겨줘서 에러, 배열에 strcpy해서 넣으니까 정상적으로 작동
-파일처리함수 모듈화 구현 완료.
4)queue가 배열로 되어 있어 report를 받아 큐에 넣을때 메모리가 계속 증가해서 get을 해도 줄어
들지 않는 원인이 되는듯.... - queue를 링크드 리스트 구조로 바꿈 ->xroshot_file4.cpp
0818--------------------------------------------------------------------------------------
1)(심각한 버그)레포트를 받고 있을때 정상적으로 업데이트가 되나 레포트를 다 받고 업데이트 할
때에는 모든 데이터가 파일의 멘 마지막 전화번호로 업데이트됨. - 엿댓다.
0820----------------------------------------------------------------------------------------
1)(bug)tel을 큐에서 제대로 가져 오지 못해 결과치가 업데이트되지 못한 버그 수정
->큐 구조체에 있는 포인터 변수를 배열로 바꾸고 대입연산을 strcpy로 대체 했다. --->xroshot_file5.cpp
(배열로 바꾸고 난 이후 메모리 증가가 급해졌다. 서버성능에 맡길수 밖에..)
2)put_2함수 제거..lpfn_report_callback에서 바로바로 큐에 넣는 방식으로 바꿨다. 
3)언제부터인가 getThread2함수가 2~3배 이상의 속도로 움직인다. 1초에 2~3개정도 디비에 업데이트
가 이루어 졌는데 이제는 2초에 10개 정도로 향상되었다.(예전 소스를 컴파일해서 돌려도 마찬가지)
속도는 올라갔지만 DB access속도가 따라줄런지 모르겠다.
4)status(), lpfn_statusd()함수 구현
0821----------------------------------------------------------------------------------------
1)status함수를 호출 조건을 case msg_type 100 : 을 썼는데 검색시에 msg_type은 보관을 해야 하기
때문에 값을 변경해서는 안된다. 그래서 switch문 앞에 if문으로 다시 job_status를 검색하게 했다.
2)[가혹테스트]메모리 17메가 까지 올라가도 데몬이 안죽음, 큐에 8만개 이상 넣어도 거뜬!!
0823----------------------------------------------------------------------------------------
1)큐에 8만개 이상의 자료가 들어갈 시, 4분간 Sleep하게 했다, 메모리 22메가 까지 괜찮음.
2)데몬을 켜자마자 결과요청을 하게 되면 getThread2가 무한 블러킹에 걸림. CriticalSection 컨트
롤을 하다 꼬인것 같음. 0821자료(xroshot_file5.cpp로 롤빽해서 다시 작업.)
3)4분간 Sleep을 시키면 콜 보내는 작업이 우선순위에서 밀려서 안될것 같아 구문 제거
0824----------------------------------------------------------------------------------------
1)머릿말 맺음말 분리 구현
2)ver 1.8 안정버전 개발 완료
0825----------------------------------------------------------------------------------------
1)ver 1.9 개발버전으로 업그레이드 시작 ->MessageServer 1.91.cpp
2)ment_play, message3 필드 추가
3)conf파일에서 테이블과 로그인 정보를 가져오는것 구현시작. - 파일에서 fgets를 했을때 "\n"이 
자동으로 붙는것을 주의해야 한다.
4)include 구문을 제외하고 main()함수 윗 부분을 conf.h파일로 옮겼다.
5)다단계 설문조사 구현
0826----------------------------------------------------------------------------------------
1)replied_dtmf 도 db에 업데이트 시킴
2)xrosht 아이디와 비번, 데이터베이스의 아이디와 비번, 모든 테이블, 모든 필드를 conf파일에서
불러오게 구현완료.(필드는 필요없어 되돌아감 ㅡㅡ;)
0830----------------------------------------------------------------------------------------
1)xrosht 아이디와 비번, 데이터베이스의 아이디와 비번만 conf파일에서 불러오게 조정.(개노가다)